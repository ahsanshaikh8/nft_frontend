{"version":3,"file":"static/js/997.01741c55.chunk.js","mappings":"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","sources":["../node_modules/@web3-react/frame-connector/src/index.ts","../node_modules/eth-provider/ConnectionManager/index.js","../node_modules/eth-provider/browser.js","../node_modules/eth-provider/connections/http.js","../node_modules/eth-provider/connections/injected.js","../node_modules/eth-provider/connections/unavailable.js","../node_modules/eth-provider/connections/ws.js","../node_modules/eth-provider/node_modules/uuid/lib/bytesToUuid.js","../node_modules/eth-provider/node_modules/uuid/lib/rng-browser.js","../node_modules/eth-provider/node_modules/uuid/v4.js","../node_modules/eth-provider/parse/index.js","../node_modules/eth-provider/presets/index.js","../node_modules/eth-provider/provider/index.js","../node_modules/eth-provider/resolve/index.js","../node_modules/ethereum-provider/index.js"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\nimport { AbstractConnector } from '@web3-react/abstract-connector'\nimport ethProvider from 'eth-provider'\nimport invariant from 'tiny-invariant'\n\nexport class UserRejectedRequestError extends Error {\n  public constructor() {\n    super()\n    this.name = this.constructor.name\n    this.message = 'The user rejected the request.'\n  }\n}\n\nexport class FrameConnector extends AbstractConnector {\n  private provider: any\n\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\n    super(kwargs)\n\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\n    this.handleChainChanged = this.handleChainChanged.bind(this)\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n  }\n\n  private handleNetworkChanged(networkId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\n    }\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\n  }\n\n  private handleChainChanged(chainId: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\n    }\n    this.emitUpdate({ chainId })\n  }\n\n  private handleAccountsChanged(accounts: string[]): void {\n    if (__DEV__) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n    }\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\n  }\n\n  private handleClose(code: number, reason: string): void {\n    if (__DEV__) {\n      console.log(\"Handling 'close' event with payload\", code, reason)\n    }\n    this.emitDeactivate()\n  }\n\n  public async activate(): Promise<ConnectorUpdate> {\n    if (!this.provider) {\n      this.provider = ethProvider('frame')\n    }\n\n    this.provider\n      .on('networkChanged', this.handleNetworkChanged)\n      .on('chainChanged', this.handleChainChanged)\n      .on('accountsChanged', this.handleAccountsChanged)\n      .on('close', this.handleClose)\n\n    const account = await this.provider\n      .enable()\n      .then((accounts: string[]): string => accounts[0])\n      .catch((error: Error): void => {\n        if (error && (error as any).code === 4001) {\n          throw new UserRejectedRequestError()\n        } else {\n          throw error\n        }\n      })\n\n    return { provider: this.provider, account }\n  }\n\n  public async getProvider(): Promise<any> {\n    return this.provider\n  }\n\n  public async getChainId(): Promise<number> {\n    return this.provider.send('eth_chainId')\n  }\n\n  public async getAccount(): Promise<null> {\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\n  }\n\n  public deactivate() {\n    this.provider\n      .removeListener('networkChanged', this.handleNetworkChanged)\n      .removeListener('chainChanged', this.handleChainChanged)\n      .removeListener('accountsChanged', this.handleAccountsChanged)\n      .removeListener('close', this.handleClose)\n  }\n}\n","const EventEmitter = require('events')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nclass ConnectionManager extends EventEmitter {\n  constructor (connections, targets, options) {\n    super()\n    this.targets = targets\n    this.connections = connections\n    this.connected = false\n    this.status = 'loading'\n    this.interval = options.interval || 5000\n    this.name = options.name || 'default'\n    this.inSetup = true\n    this.connect()\n  }\n\n  connect (index = 0) {\n    if (dev && index === 0) console.log(`\\n\\n\\n\\nA connection cycle started for provider with name: ${this.name}`)\n\n    if (this.connection && this.connection.status === 'connected' && index >= this.connection.index) {\n      if (dev) console.log('Stopping connection cycle becasuse we\\'re already connected to a higher priority provider')\n    } else if (this.targets.length === 0) {\n      if (dev) console.log('No valid targets supplied')\n    } else {\n      const { protocol, location } = this.targets[index]\n      this.connection = this.connections[protocol](location)\n\n      this.connection.on('error', err => {\n        if (!this.connected) return this.connectionError(index, err)\n        if (this.listenerCount('error')) return this.emit('error', err)\n        console.warn('eth-provider - Uncaught connection error: ' + err.message)\n      })\n\n      this.connection.on('close', (summary) => {\n        this.connected = false\n        this.emit('close')\n        if (!this.closing) this.refresh()\n      })\n\n      this.connection.on('connect', () => {\n        this.connection.target = this.targets[index]\n        this.connection.index = index\n        this.targets[index].status = this.connection.status\n        this.connected = true\n        this.inSetup = false\n        if (dev) console.log('Successfully connected to: ' + this.targets[index].location)\n        this.emit('connect')\n      })\n\n      this.connection.on('data', data => this.emit('data', data))\n      this.connection.on('payload', payload => this.emit('payload', payload))\n    }\n  }\n\n  refresh (interval = this.interval) {\n    if (dev) console.log(`Reconnect queued for ${(interval / 1000).toFixed(2)}s in the future`)\n    clearTimeout(this.connectTimer)\n    this.connectTimer = setTimeout(() => this.connect(), interval)\n  }\n\n  connectionError (index, err) {\n    this.targets[index].status = err\n    if (this.targets.length - 1 === index) {\n      this.inSetup = false\n      if (dev) console.warn('eth-provider unable to connect to any targets, view connection cycle summary: ', this.targets)\n      this.refresh()\n    } else { // Not last target, move on the next connection option\n      this.connect(++index)\n    }\n  }\n\n  close () {\n    this.closing = true\n    if (this.connection) {\n      this.connection.close() // Let event bubble from here\n    } else {\n      this.emit('close')\n    }\n    clearTimeout(this.connectTimer)\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.inSetup) {\n      setTimeout(() => this.send(payload), 100)\n    } else if (this.connection.closed) {\n      this.error(payload, 'Not connected')\n    } else {\n      this.connection.send(payload)\n    }\n  }\n}\n\nmodule.exports = ConnectionManager\n","const resolve = require('./resolve')\nconst provider = require('./provider')\nconst presets = require('./presets')\n\nconst injected = {\n  ethereum: typeof window !== 'undefined' && typeof window.ethereum !== 'undefined' ? window.ethereum : null,\n  web3: typeof window !== 'undefined' && typeof window.web3 !== 'undefined' ? window.web3.currentProvider : null\n}\nconst ws = typeof window !== 'undefined' && typeof window.WebSocket !== 'undefined' ? window.WebSocket : null\nconst XHR = typeof window !== 'undefined' && typeof window.XMLHttpRequest !== 'undefined' ? window.XMLHttpRequest : null\n\nif (injected.ethereum) injected.ethereum.__isProvider = true\n\nconst connections = {\n  injected: injected.ethereum || require('./connections/injected')(injected.web3),\n  ipc: require('./connections/unavailable')('IPC connections are unavliable in the browser'),\n  ws: require('./connections/ws')(ws),\n  http: require('./connections/http')(XHR)\n}\n\nmodule.exports = (targets = ['injected', 'frame'], options = {}) => provider(connections, resolve(targets, presets), options)\n","const EventEmitter = require('events')\nconst uuid = require('uuid/v4')\n\nconst dev = process.env.NODE_ENV === 'development'\n\nlet XHR\n\nclass HTTPConnection extends EventEmitter {\n  constructor (_XHR, url, options) {\n    super()\n    XHR = _XHR\n    this.connected = false\n    this.subscriptions = false\n    this.status = 'loading'\n    this.url = url\n    this.pollId = uuid()\n    setTimeout(() => this.create(), 0)\n  }\n\n  create () {\n    if (!XHR) return this.emit('error', new Error('No HTTP transport available'))\n    this.on('error', () => { if (this.connected) this.close() })\n    this.init()\n  }\n\n  init () {\n    this.send({ jsonrpc: '2.0', method: 'eth_syncing', params: [], id: 1 }, (err, response) => {\n      if (err) return this.emit('error', err)\n      this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId, 'immediate'] }, (err, response) => {\n        if (!err) {\n          this.subscriptions = true\n          this.pollSubscriptions()\n        }\n        this.connected = true\n        this.emit('connect')\n      })\n    })\n  }\n\n  pollSubscriptions () {\n    this.send({ jsonrpc: '2.0', id: 1, method: 'eth_pollSubscriptions', params: [this.pollId] }, (err, result) => {\n      if (err) {\n        this.subscriptionTimeout = setTimeout(() => this.pollSubscriptions(), 10000)\n        return this.emit('error', err)\n      } else {\n        if (!this.closed) this.subscriptionTimeout = this.pollSubscriptions()\n        if (result) {\n          result.map(p => {\n            let parse\n            try { parse = JSON.parse(p) } catch (e) { parse = false }\n            return parse\n          }).filter(n => n).forEach(p => this.emit('payload', p))\n        }\n      }\n    })\n  }\n\n  close () {\n    if (dev) console.log('Closing HTTP connection')\n    this.closed = true\n    this.emit('close')\n    clearTimeout(this.subscriptionTimeout)\n    this.removeAllListeners()\n  }\n\n  filterStatus (res) {\n    if (res.status >= 200 && res.status < 300) return res\n    const error = new Error(res.statusText)\n    error.res = res\n    throw error.message\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload, internal) {\n    if (this.closed) return this.error(payload, 'Not connected')\n    if (payload.method === 'eth_subscribe') {\n      if (this.subscriptions) {\n        payload.pollId = this.pollId\n      } else {\n        return this.error(payload, 'Subscriptions are not supported by this HTTP endpoint')\n      }\n    }\n    const xhr = new XHR()\n    let responded = false\n    const res = (err, result) => {\n      if (!responded) {\n        xhr.abort()\n        responded = true\n        if (internal) {\n          internal(err, result)\n        } else {\n          const { id, jsonrpc } = payload\n          const load = err ? { id, jsonrpc, error: { message: err.message, code: err.code } } : { id, jsonrpc, result }\n          this.emit('payload', load)\n        }\n      }\n    }\n    xhr.open('POST', this.url, true)\n    xhr.setRequestHeader('Content-Type', 'application/json')\n    xhr.timeout = 60 * 1000\n    xhr.onerror = res\n    xhr.ontimeout = res\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4) {\n        try {\n          const response = JSON.parse(xhr.responseText)\n          res(response.error, response.result)\n        } catch (e) {\n          res(e)\n        }\n      }\n    }\n    xhr.send(JSON.stringify(payload))\n  }\n}\n\nmodule.exports = XHR => (url, options) => new HTTPConnection(XHR, url, options)\n","const EventEmitter = require('events')\n\nclass InjectedConnection extends EventEmitter {\n  constructor (_injected, options) {\n    super()\n    if (_injected) {\n      setTimeout(() => this.emit('error', new Error('Injected web3 provider is not currently supported')), 0)\n    } else {\n      setTimeout(() => this.emit('error', new Error('No injected provider found')), 0)\n    }\n  }\n}\n\nmodule.exports = injected => options => new InjectedConnection(injected, options)\n","const EventEmitter = require('events')\n\nclass UnavailableConnection extends EventEmitter {\n  constructor (message) {\n    super()\n    setTimeout(() => this.emit('error', new Error(message)), 0)\n  }\n}\n\nmodule.exports = message => () => new UnavailableConnection(message)\n","const EventEmitter = require('events')\nconst parse = require('../parse')\nconst dev = process.env.NODE_ENV === 'development'\n\nlet WebSocket\n\nclass WebSocketConnection extends EventEmitter {\n  constructor (_WebSocket, url, options) {\n    super()\n    WebSocket = _WebSocket\n    setTimeout(() => this.create(url, options), 0)\n  }\n\n  create (url, options) {\n    if (!WebSocket) this.emit('error', new Error('No WebSocket transport available'))\n    try { this.socket = new WebSocket(url) } catch (e) { return this.emit('error', e) }\n    this.socket.addEventListener('error', err => this.emit('error', err))\n    this.socket.addEventListener('open', () => {\n      this.emit('connect')\n      this.socket.addEventListener('message', message => {\n        const data = typeof message.data === 'string' ? message.data : ''\n        parse(data, (err, payloads) => {\n          if (err) return //\n          payloads.forEach(load => {\n            if (Array.isArray(load)) {\n              load.forEach(payload => this.emit('payload', payload))\n            } else {\n              this.emit('payload', load)\n            }\n          })\n        })\n      })\n      this.socket.addEventListener('close', () => this.onClose())\n    })\n  }\n\n  onClose () {\n    this.socket = null\n    this.closed = true\n    if (dev) console.log('Closing WebSocket connection')\n    this.emit('close')\n    this.removeAllListeners()\n  }\n\n  close () {\n    if (this.socket) {\n      this.socket.close()\n    } else {\n      this.onClose()\n    }\n  }\n\n  error (payload, message, code = -1) {\n    this.emit('payload', { id: payload.id, jsonrpc: payload.jsonrpc, error: { message, code } })\n  }\n\n  send (payload) {\n    if (this.socket && this.socket.readyState === this.socket.CONNECTING) {\n      setTimeout(_ => this.send(payload), 10)\n    } else if (!this.socket || this.socket.readyState > 1) {\n      this.connected = false\n      this.error(payload, 'Not connected')\n    } else {\n      this.socket.send(JSON.stringify(payload))\n    }\n  }\n}\n\nmodule.exports = WebSocket => (url, cb) => new WebSocketConnection(WebSocket, url, cb)\n","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\n\n// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n// implementation. Also, find the complete implementation of crypto on IE11.\nvar getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      (typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\nif (getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\n  module.exports = function whatwgRNG() {\n    getRandomValues(rnds8);\n    return rnds8;\n  };\n} else {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n\n  module.exports = function mathRNG() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","let last, timeout\n\nmodule.exports = (res, cb) => {\n  const values = []\n  res\n    .replace(/\\}[\\n\\r]?\\{/g, '}|--|{') // }{\n    .replace(/\\}\\][\\n\\r]?\\[\\{/g, '}]|--|[{') // }][{\n    .replace(/\\}[\\n\\r]?\\[\\{/g, '}|--|[{') // }[{\n    .replace(/\\}\\][\\n\\r]?\\{/g, '}]|--|{') // }]{\n    .split('|--|')\n    .forEach(data => {\n      if (last) data = last + data // prepend the last chunk\n      let result\n      try {\n        result = JSON.parse(data)\n      } catch (e) {\n        last = data\n        clearTimeout(timeout) // restart timeout\n        timeout = setTimeout(() => cb(new Error('Parse response timeout')), 15 * 1000)\n        return\n      }\n      clearTimeout(timeout)\n      last = null\n      if (result) values.push(result)\n    })\n  cb(null, values)\n}\n","module.exports = {\n  injected: ['injected'],\n  frame: ['ws://127.0.0.1:1248', 'http://127.0.0.1:1248'],\n  direct: ['ws://127.0.0.1:8546', 'http://127.0.0.1:8545'], // IPC paths will be prepended in Node/Electron\n  infura: ['wss://mainnet.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://mainnet.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRopsten: ['wss://ropsten.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://ropsten.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraRinkeby: ['wss://rinkeby.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://rinkeby.infura.io/v3/786ade30f36244469480aa5c2bf0743b'],\n  infuraKovan: ['wss://kovan.infura.io/ws/v3/786ade30f36244469480aa5c2bf0743b', 'https://kovan.infura.io/v3/786ade30f36244469480aa5c2bf0743b']\n}\n","const EventEmitter = require('events')\nconst EthereumProvider = require('ethereum-provider')\nconst ConnectionManager = require('../ConnectionManager')\n\nconst monitor = provider => {\n  function update (status) {\n    provider.status = status\n    if (provider instanceof EventEmitter) provider.emit('status', status)\n  }\n  async function check () {\n    if (provider.inSetup) return setTimeout(check, 1000)\n    try {\n      if (await provider.send('eth_syncing')) {\n        update('syncing')\n        setTimeout(() => check(), 5000)\n      } else {\n        update('connected')\n      }\n    } catch (e) {\n      update('disconnected')\n    }\n  }\n  update('loading')\n  check()\n  provider.on('connect', () => check())\n  provider.on('close', () => update('disconnected'))\n  return provider\n}\n\nmodule.exports = (connections, targets, options) => {\n  // If window.ethereum and injected is a target in any priority, return ethereum provider\n  if (connections.injected.__isProvider && targets.map(t => t.type).indexOf('injected') > -1) {\n    delete connections.injected.__isProvider\n    return monitor(connections.injected)\n  }\n  const provider = new EthereumProvider(new ConnectionManager(connections, targets, options))\n  provider.setMaxListeners(128)\n  return monitor(provider)\n}\n","const getProtocol = location => {\n  if (location === 'injected') return 'injected'\n  if (location.endsWith('.ipc')) return 'ipc'\n  if (location.startsWith('wss://') || location.startsWith('ws://')) return 'ws'\n  if (location.startsWith('https://') || location.startsWith('http://')) return 'http'\n  return ''\n}\n\nmodule.exports = (targets, presets) => {\n  return [].concat(...[].concat(targets).map(provider => {\n    if (presets[provider]) {\n      return presets[provider].map(location => ({ type: provider, location, protocol: getProtocol(location) }))\n    } else {\n      return { type: 'custom', location: provider, protocol: getProtocol(provider) }\n    }\n  })).filter(provider => {\n    if (provider.protocol || provider.type === 'injected') {\n      return true\n    } else {\n      console.log('eth-provider | Invalid provider preset/location: \"' + provider.location + '\"')\n      return false\n    }\n  })\n}\n","const EventEmitter = require('events')\n\nclass EthereumProvider extends EventEmitter {\n  constructor (connection) {\n    super()\n    this.connected = false\n    this.nextId = 0\n    this.promises = {}\n    this.subscriptions = []\n    this.connection = connection\n    this.connection.on('connect', () => this.checkConnection())\n    this.connection.on('close', () => this.emit('close'))\n    this.connection.on('payload', payload => {\n      const { id, method, error, result } = payload\n      if (typeof id !== 'undefined') {\n        if (this.promises[id]) { // Fulfill promise\n          payload.error ? this.promises[id].reject(error) : this.promises[id].resolve(result)\n          delete this.promises[id]\n        }\n      } else if (method && method.indexOf('_subscription') > -1) { // Emit subscription result\n        this.emit(payload.params.subscription, payload.params.result)\n        this.emit(method, payload.params) // Latest EIP-1193\n        this.emit('data', payload) // Backwards Compatibility\n      }\n    })\n    this.on('newListener', (event, listener) => {\n      if (event === 'networkChanged') {\n        if (!this.attemptedNetworkSubscription && this.connected) this.startNetworkSubscription()\n      } else if (event === 'accountsChanged') {\n        if (!this.attemptedAccountsSubscription && this.connected) this.startAccountsSubscription()\n      }\n    })\n  }\n  async checkConnection () {\n    try {\n      this.emit('connect', await this._send('net_version'))\n      this.connected = true\n      if (this.listenerCount('networkChanged') && !this.attemptedNetworkSubscription) this.startNetworkSubscription()\n      if (this.listenerCount('accountsChanged') && !this.attemptedAccountsSubscription) this.startAccountsSubscription()\n    } catch (e) {\n      this.connected = false\n    }\n  }\n  async startNetworkSubscription () {\n    this.attemptedNetworkSubscription = true\n    try {\n      let networkChanged = await this.subscribe('eth_subscribe', 'networkChanged')\n      this.on(networkChanged, netId => this.emit('networkChanged', netId))\n    } catch (e) {\n      console.warn('Unable to subscribe to networkChanged', e)\n    }\n  }\n  async startAccountsSubscription () {\n    this.attemptedAccountsSubscription = true\n    try {\n      let accountsChanged = await this.subscribe('eth_subscribe', 'accountsChanged')\n      this.on(accountsChanged, accounts => this.emit('accountsChanged', accounts))\n    } catch (e) {\n      console.warn('Unable to subscribe to accountsChanged', e)\n    }\n  }\n  enable () {\n    return new Promise((resolve, reject) => {\n      this._send('eth_accounts').then(accounts => {\n        if (accounts.length > 0) {\n          this.accounts = accounts\n          this.coinbase = accounts[0]\n          this.emit('enable')\n          resolve(accounts)\n        } else {\n          const err = new Error('User Denied Full Provider')\n          err.code = 4001\n          reject(err)\n        }\n      }).catch(reject)\n    })\n  }\n  _send (method, params = []) {\n    if (!method || typeof method !== 'string') return new Error('Method is not a valid string.')\n    if (!(params instanceof Array)) return new Error('Params is not a valid array.')\n    const payload = { jsonrpc: '2.0', id: this.nextId++, method, params }\n    const promise = new Promise((resolve, reject) => { this.promises[payload.id] = { resolve, reject } })\n    this.connection.send(payload)\n    return promise\n  }\n  send (...args) { // Send can be clobbered, proxy sendPromise for backwards compatibility\n    return this._send(...args)\n  }\n  _sendBatch (requests) {\n    return Promise.all(requests.map(payload => this._send(payload.method, payload.params)))\n  }\n  subscribe (type, method, params = []) {\n    return this._send(type, [method, ...params]).then(id => {\n      this.subscriptions.push(id)\n      return id\n    })\n  }\n  unsubscribe (type, id) {\n    return this._send(type, [id]).then(success => {\n      if (success) {\n        this.subscriptions = this.subscriptions.filter(_id => _id !== id) // Remove subscription\n        this.removeAllListeners(id) // Remove listeners\n        return success\n      }\n    })\n  }\n  sendAsync (payload, cb) { // Backwards Compatibility\n    if (!cb || typeof cb !== 'function') return cb(new Error('Invalid or undefined callback provided to sendAsync'))\n    if (!payload) return cb(new Error('Invalid Payload'))\n    // sendAsync can be called with an array for batch requests used by web3.js 0.x\n    // this is not part of EIP-1193's backwards compatibility but we still want to support it\n    if (payload instanceof Array) {\n      return this.sendAsyncBatch(payload, cb)\n    } else {\n      return this._send(payload.method, payload.params).then(result => {\n        cb(null, { id: payload.id, jsonrpc: payload.jsonrpc, result })\n      }).catch(err => {\n        cb(err)\n      })\n    }\n  }\n  sendAsyncBatch (payload, cb) {\n    return this._sendBatch(payload).then((results) => {\n      let result = results.map((entry, index) => {\n        return { id: payload[index].id, jsonrpc: payload[index].jsonrpc, result: entry }\n      })\n      cb(null, result)\n    }).catch(err => {\n      cb(err)\n    })\n  }\n  isConnected () { // Backwards Compatibility\n    return this.connected\n  }\n  close () {\n    this.connection.close()\n    this.connected = false\n    let error = new Error(`Provider closed, subscription lost, please subscribe again.`)\n    this.subscriptions.forEach(id => this.emit(id, error)) // Send Error objects to any open subscriptions\n    this.subscriptions = [] // Clear subscriptions\n  }\n}\n\nmodule.exports = EthereumProvider\n"],"names":["UserRejectedRequestError","_this","name","constructor","message","_inheritsLoose","Error","FrameConnector","kwargs","supportedChainIds","length","_this2","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","_proto","networkId","this","emitUpdate","provider","chainId","accounts","account","code","reason","emitDeactivate","activate","_this4","ethProvider","on","enable","then","error","e","getProvider","getChainId","send","getAccount","deactivate","removeListener","AbstractConnector","EventEmitter","require","dev","process","ConnectionManager","connections","targets","options","connected","status","interval","inSetup","connect","index","connection","protocol","location","err","listenerCount","emit","console","warn","connectionError","summary","closing","refresh","target","data","payload","clearTimeout","connectTimer","setTimeout","close","id","jsonrpc","closed","module","exports","resolve","presets","injected","ethereum","window","web3","currentProvider","ws","WebSocket","XHR","XMLHttpRequest","__isProvider","ipc","http","uuid","HTTPConnection","_XHR","url","subscriptions","pollId","create","init","method","params","response","pollSubscriptions","result","subscriptionTimeout","map","p","parse","JSON","filter","n","forEach","removeAllListeners","res","statusText","internal","xhr","responded","abort","load","open","setRequestHeader","timeout","onerror","ontimeout","onreadystatechange","readyState","responseText","stringify","InjectedConnection","_injected","UnavailableConnection","WebSocketConnection","_WebSocket","socket","addEventListener","payloads","Array","isArray","onClose","CONNECTING","_","cb","byteToHex","i","toString","substr","buf","offset","bth","join","getRandomValues","crypto","msCrypto","rnds8","Uint8Array","rnds","r","Math","random","rng","bytesToUuid","ii","last","values","replace","split","push","frame","direct","infura","infuraRopsten","infuraRinkeby","infuraKovan","EthereumProvider","monitor","update","check","t","type","indexOf","setMaxListeners","getProtocol","endsWith","startsWith","concat","log","nextId","promises","checkConnection","reject","subscription","event","listener","attemptedNetworkSubscription","startNetworkSubscription","attemptedAccountsSubscription","startAccountsSubscription","_send","subscribe","networkChanged","netId","accountsChanged","Promise","coinbase","catch","promise","requests","all","success","_id","sendAsyncBatch","_sendBatch","results","entry"],"sourceRoot":""}